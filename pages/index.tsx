import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { EditorState } from "prosemirror-state";
import { EditorView } from "prosemirror-view";
import { Schema, DOMParser } from "prosemirror-model";
import { schema } from "prosemirror-schema-basic";
import { addListNodes } from "prosemirror-schema-list";
//@ts-ignore
import { exampleSetup } from "prosemirror-example-setup";
import { useEffect, useRef } from "react";
import { useCaret } from "../hooks/useCaret";

// Mix the nodes from prosemirror-schema-list into the basic schema to
// create a schema with list support.

const Home: NextPage = () => {
  const containerRef = useRef<HTMLDivElement>(null);
  const contentRef = useRef<HTMLDivElement>(null);

  useCaret();

  useEffect(() => {
    const container = containerRef.current;
    const content = contentRef.current;
    if (!container || !content) {
      return;
    }
    const mySchema = new Schema({
      nodes: addListNodes(schema.spec.nodes, "paragraph block*", "block"),
      marks: schema.spec.marks,
    });

    const view = new EditorView(container, {
      state: EditorState.create({
        doc: DOMParser.fromSchema(mySchema).parse(content),
        plugins: exampleSetup({ schema: mySchema }),
      }),
    });

    return () => {
      view.destroy();
    };
  }, []);

  return (
    <div>
      <Head>
        <title>Custom Caret</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://prosemirror.net/css/editor.css" />
      </Head>

      <main className={styles.main}>
        <div
          style={{
            marginBottom: "23px",
          }}
          ref={containerRef}
        ></div>

        <div
          style={{
            display: "none",
          }}
          ref={contentRef}
        >
          <h3>Hello ProseMirror</h3>

          <p>This is editable text. You can focus it and start typing.</p>

          <p>
            To apply styling, you can select a piece of text and manipulate its
            styling from the menu. The basic schema supports <em>emphasis</em>,{" "}
            <strong>strong text</strong>,{" "}
            <a href="http://marijnhaverbeke.nl/blog">links</a>,{" "}
            <code>code font</code>, and images.
          </p>

          <p>
            Block-level structure can be manipulated with key bindings (try
            ctrl-shift-2 to create a level 2 heading, or enter in an empty
            textblock to exit the parent block), or through the menu.
          </p>

          <p>
            Try using the “list” item in the menu to wrap this paragraph in a
            numbered list.
          </p>
        </div>
      </main>
    </div>
  );
};

export default Home;
